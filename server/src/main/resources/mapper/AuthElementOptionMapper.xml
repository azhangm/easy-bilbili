<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="nuc.zm.server.mapper.AuthElementOptionMapper">
  <resultMap id="BaseResultMap" type="nuc.zm.server.domain.auth.AuthElementOption">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="element_name" jdbcType="VARCHAR" property="elementName" />
    <result column="element_code" jdbcType="VARCHAR" property="elementCode" />
    <result column="opt_type" jdbcType="BOOLEAN" property="optType" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, element_name, element_code, opt_type, create_time, update_time
  </sql>
  <select id="selectByExample" parameterType="nuc.zm.server.domain.auth.AuthElementOptionExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from auth_element_option
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from auth_element_option
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from auth_element_option
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="nuc.zm.server.domain.auth.AuthElementOptionExample">
    delete from auth_element_option
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="nuc.zm.server.domain.auth.AuthElementOption" useGeneratedKeys="true">
    insert into auth_element_option (element_name, element_code, opt_type, 
      create_time, update_time)
    values (#{elementName,jdbcType=VARCHAR}, #{elementCode,jdbcType=VARCHAR}, #{optType,jdbcType=BOOLEAN}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="nuc.zm.server.domain.auth.AuthElementOption" useGeneratedKeys="true">
    insert into auth_element_option
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="elementName != null">
        element_name,
      </if>
      <if test="elementCode != null">
        element_code,
      </if>
      <if test="optType != null">
        opt_type,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="elementName != null">
        #{elementName,jdbcType=VARCHAR},
      </if>
      <if test="elementCode != null">
        #{elementCode,jdbcType=VARCHAR},
      </if>
      <if test="optType != null">
        #{optType,jdbcType=BOOLEAN},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="nuc.zm.server.domain.auth.AuthElementOptionExample" resultType="java.lang.Long">
    select count(*) from auth_element_option
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>

    <update id="updateByExampleSelective" parameterType="map">
    update auth_element_option
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.elementName != null">
        element_name = #{record.elementName,jdbcType=VARCHAR},
      </if>
      <if test="record.elementCode != null">
        element_code = #{record.elementCode,jdbcType=VARCHAR},
      </if>
      <if test="record.optType != null">
        opt_type = #{record.optType,jdbcType=BOOLEAN},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update auth_element_option
    set id = #{record.id,jdbcType=BIGINT},
      element_name = #{record.elementName,jdbcType=VARCHAR},
      element_code = #{record.elementCode,jdbcType=VARCHAR},
      opt_type = #{record.optType,jdbcType=BOOLEAN},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="nuc.zm.server.domain.auth.AuthElementOption">
    update auth_element_option
    <set>
      <if test="elementName != null">
        element_name = #{elementName,jdbcType=VARCHAR},
      </if>
      <if test="elementCode != null">
        element_code = #{elementCode,jdbcType=VARCHAR},
      </if>
      <if test="optType != null">
        opt_type = #{optType,jdbcType=BOOLEAN},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="nuc.zm.server.domain.auth.AuthElementOption">
    update auth_element_option
    set element_name = #{elementName,jdbcType=VARCHAR},
      element_code = #{elementCode,jdbcType=VARCHAR},
      opt_type = #{optType,jdbcType=BOOLEAN},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>